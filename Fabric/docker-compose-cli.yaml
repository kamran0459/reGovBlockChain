# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'



networks:
  mtct:

services:

  peer0.hquarter.mtct.com:
    restart: always
    container_name: peer0.hquarter.mtct.com
    hostname: peer0.hquarter.mtct.com
    domainname: peer0.hquarter.mtct.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.hquarter.mtct.com
    extra_hosts:
      - "peer0.hquarter.mtct.com:0.0.0.0"
      - "peer0.invester.mtct.com:192.168.0.113"
      - "peer0.adviser.mtct.com:192.168.0.113"
    networks:
      - mtct

  peer0.invester.mtct.com:
    restart: always
    container_name: peer0.invester.mtct.com
    hostname: peer0.invester.mtct.com
    domainname: peer0.invester.mtct.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.invester.mtct.com
    extra_hosts:
      - "peer0.hquarter.mtct.com:192.168.0.113"
      - "peer0.invester.mtct.com:0.0.0.0"
      - "peer0.adviser.mtct.com:192.168.0.113"
    networks:
      - mtct

  peer0.adviser.mtct.com:
    restart: always
    container_name: peer0.adviser.mtct.com
    hostname: peer0.adviser.mtct.com
    domainname: peer0.adviser.mtct.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.adviser.mtct.com
    extra_hosts:
      - "peer0.hquarter.mtct.com:192.168.0.113"
      - "peer0.invester.mtct.com:192.168.0.113"
      - "peer0.adviser.mtct.com:0.0.0.0"
    networks:
      - mtct


  # ca.mtct:
  #   image: hyperledger/fabric-ca:1.4.0
  #   environment:
  #     - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
  #     - FABRIC_CA_SERVER_CA_NAME=ca-mtct
  #     - FABRIC_CA_SERVER_TLS_ENABLED=true
  #     - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.mtct.com-cert.pem
  #     - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/f8f90fd7e8859fc6e5b23231cecc19f64733fc191696dcbfaf4c27ed419da896_sk
  #   ports:
  #     - "7054:7054"
  #   command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.mtct.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/f8f90fd7e8859fc6e5b23231cecc19f64733fc191696dcbfaf4c27ed419da896_sk -b admin:adminpw -d'
  #   volumes:
  #     - ./crypto-config/peerOrganizations/mtct.com/ca:/etc/hyperledger/fabric-ca-server-config
  #   container_name: ca.mtct
  #   networks:
  #     - mtct

  # ca.dewa:
  #   image: hyperledger/fabric-ca:$IMAGE_TAG
  #   environment:
  #     - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
  #     - FABRIC_CA_SERVER_CA_NAME=ca-dewa
  #     - FABRIC_CA_SERVER_TLS_ENABLED=true
  #     - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.dewa.mtct.com-cert.pem
  #     - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/e2ad9c793b464eb0bcceaae4ab17ce9e9398e988360b56a44d539f2cd918f111_sk
  #   ports:
  #     - "8054:7054"
  #   command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.dewa.mtct.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/e2ad9c793b464eb0bcceaae4ab17ce9e9398e988360b56a44d539f2cd918f111_sk -b admin:adminpw -d'
  #   volumes:
  #     - ./crypto-config/peerOrganizations/dewa.mtct.com/ca/:/etc/hyperledger/fabric-ca-server-config
  #   container_name: ca_peerdewa
  #   networks:
  #     - mtct

  

  zookeeper0:
        extends:
            file: base/docker-compose-base.yaml
            service: zookeeper
        container_name: zookeeper0
        environment:
            - ZOO_MY_ID=1
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        ports:
            - 2181:2181
            - 2888:2888
            - 3888:3888
        networks:
          - mtct
        volumes:
          - ./chaindata/zk-data/1/:/data
          - ./chaindata/zk-logs/1/:/datalog
  zookeeper1:
        extends:
            file: base/docker-compose-base.yaml
            service: zookeeper
        container_name: zookeeper1
        environment:
            - ZOO_MY_ID=2
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        ports:
            - 2182:2181
            - 2889:2888
            - 3889:3888
        networks:
          - mtct
        volumes:
          - ./chaindata/zk-data/2/:/data
          - ./chaindata/zk-logs/2/:/datalog

  zookeeper2:
        extends:
            file: base/docker-compose-base.yaml
            service: zookeeper
        container_name: zookeeper2
        environment:
            - ZOO_MY_ID=3
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        ports:
            - 2183:2181
            - 2890:2888
            - 3890:3888
        volumes:
          - ./chaindata/zk-data/3/:/data
          - ./chaindata/zk-logs/3/:/datalog
        networks:
          - mtct

  kafka0:
        extends:
            file: base/docker-compose-base.yaml
            service: kafka
        container_name: kafka0
        environment:
            - KAFKA_BROKER_ID=0
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0.mtct.blkchain:2181,zookeeper1.mtct.blkchain:2182,zookeeper2.mtct.blkchain:2183
            - KAFKA_MESSAGE_MAX_BYTES=104857600
            - KAFKA_PORT=9092
            - KAFKA_REPLICA_FETCH_MAX_BYTES=${KAFKA_REPLICA_FETCH_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=${KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES}
        ports:
            - 9092:9092
        expose:
            - 9092
        extra_hosts:
            - "zookeeper0.mtct.blkchain:192.168.0.113"
            - "zookeeper1.mtct.blkchain:192.168.0.113"
            - "zookeeper2.mtct.blkchain:192.168.0.113"
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        networks:
          - mtct
        volumes:
          - ./chaindata/kafka-logs/0/:/tmp/kafka-logs/

  kafka1:
        extends:
            file: base/docker-compose-base.yaml
            service: kafka
        container_name: kafka1
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0.mtct.blkchain:2181,zookeeper1.mtct.blkchain:2182,zookeeper2.mtct.blkchain:2183
            - KAFKA_MESSAGE_MAX_BYTES=104857600
            - KAFKA_PORT=9093
            - KAFKA_REPLICA_FETCH_MAX_BYTES=${KAFKA_REPLICA_FETCH_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=${KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES}
        extra_hosts:
            - "zookeeper0.mtct.blkchain:192.168.0.113"
            - "zookeeper1.mtct.blkchain:192.168.0.113"
            - "zookeeper2.mtct.blkchain:192.168.0.113"
        ports:
            - 9093:9093
        expose:
            - 9093
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        networks:
          - mtct
        volumes:
          - ./chaindata/kafka-logs/1/:/tmp/kafka-logs/              
  kafka2:
        extends:
            file: base/docker-compose-base.yaml
            service: kafka
        container_name: kafka2
        environment:
            - KAFKA_BROKER_ID=2
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0.mtct.blkchain:2181,zookeeper1.mtct.blkchain:2182,zookeeper2.mtct.blkchain:2183
            - KAFKA_MESSAGE_MAX_BYTES=104857600
            - KAFKA_PORT=9094
            - KAFKA_REPLICA_FETCH_MAX_BYTES=${KAFKA_REPLICA_FETCH_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=${KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES}
        ports:
            - 9094:9094
        expose:
            - 9094
        extra_hosts:
            - "zookeeper0.mtct.blkchain:192.168.0.113"
            - "zookeeper1.mtct.blkchain:192.168.0.113"
            - "zookeeper2.mtct.blkchain:192.168.0.113"
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        networks:
          - mtct
        volumes:
          - ./chaindata/kafka-logs/2/:/tmp/kafka-logs/
  kafka3:
        extends:
            file: base/docker-compose-base.yaml
            service: kafka
        container_name: kafka3
        environment:
            - KAFKA_BROKER_ID=3
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0.mtct.blkchain:2181,zookeeper1.mtct.blkchain:2182,zookeeper2.mtct.blkchain:2183
            - KAFKA_MESSAGE_MAX_BYTES=104857600
            - KAFKA_PORT=9095
            - KAFKA_REPLICA_FETCH_MAX_BYTES=${KAFKA_REPLICA_FETCH_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=${KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES}
        ports:
            - 9095:9095
        expose:
            - 9095
        extra_hosts:
            - "zookeeper0.mtct.blkchain:192.168.0.113"
            - "zookeeper1.mtct.blkchain:192.168.0.113"
            - "zookeeper2.mtct.blkchain:192.168.0.113"
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        networks:
          - mtct
        volumes:
          - ./chaindata/kafka-logs/3/:/tmp/kafka-logs/
  orderer0.mtct.com:
        extends:
            file: base/docker-compose-base.yaml
            service: orderer
        container_name: orderer0.mtct.com
        environment:
            - ORDERER_HOST=orderer0.mtct.com
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0.mtct.blkchain:9092,kafka1.mtct.blkchain:9093,kafka2.mtct.blkchain:9094,kafka3.mtct.blkchain:9095]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=dcProfile
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ./crypto-config/ordererOrganizations/mtct.com/orderers/orderer0.mtct.com/msp:/var/hyperledger/orderer/msp
            - ./crypto-config/ordererOrganizations/mtct.com/orderers/orderer0.mtct.com/tls/:/var/hyperledger/orderer/tls
            - ./crypto-config/ordererOrganizations/mtct.com/orderers/orderer0.mtct.com/tls/:/etc/hyperledger/fabric/tls
            - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/genesis.block
            - ./chaindata/orderer0.mtct.com:/var/hyperledger/production/orderer
        extra_hosts:
            - "orderer0.mtct.com:0.0.0.0"
            - "orderer1.mtct.com:192.168.0.113"
            - "orderer2.mtct.com:192.168.0.113"
            - "kafka0.mtct.blkchain:192.168.0.113"
            - "kafka1.mtct.blkchain:192.168.0.113"
            - "kafka2.mtct.blkchain:192.168.0.113"
            - "kafka3.mtct.blkchain:192.168.0.113"
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          - mtct
        ports:
          - 7050:7050

  orderer1.mtct.com:
        extends:
            file: base/docker-compose-base.yaml
            service: orderer
        container_name: orderer1.mtct.com
        environment:
            - ORDERER_HOST=orderer1.mtct.com
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0.mtct.blkchain:9092,kafka1.mtct.blkchain:9093,kafka2.mtct.blkchain:9094,kafka3.mtct.blkchain:9095]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=dcProfile
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ./crypto-config/ordererOrganizations/mtct.com/orderers/orderer1.mtct.com/msp:/var/hyperledger/orderer/msp
            - ./crypto-config/ordererOrganizations/mtct.com/orderers/orderer1.mtct.com/tls/:/var/hyperledger/orderer/tls
            - ./crypto-config/ordererOrganizations/mtct.com/orderers/orderer1.mtct.com/tls/:/etc/hyperledger/fabric/tls
            - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/genesis.block
            - ./chaindata/orderer1.mtct.com:/var/hyperledger/production/orderer
        extra_hosts:
            - "orderer0.mtct.com:192.168.0.113"
            - "orderer1.mtct.com:0.0.0.0"
            - "orderer2.mtct.com:192.168.0.113"
            - "kafka0.mtct.blkchain:192.168.0.113"
            - "kafka1.mtct.blkchain:192.168.0.113"
            - "kafka2.mtct.blkchain:192.168.0.113"
            - "kafka3.mtct.blkchain:192.168.0.113"
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          - mtct
        ports:
          - 8050:7050

  orderer2.mtct.com:
        extends:
            file: base/docker-compose-base.yaml
            service: orderer
        container_name: orderer2.mtct.com
        environment:
            - ORDERER_HOST=orderer2.mtct.com
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0.mtct.blkchain:9092,kafka1.mtct.blkchain:9093,kafka2.mtct.blkchain:9094,kafka3.mtct.blkchain:9095]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        extra_hosts:
            - "orderer0.mtct.com:192.168.0.113"
            - "orderer1.mtct.com:192.168.0.113"
            - "orderer2.mtct.com:0.0.0.0"
            - "kafka0.mtct.blkchain:192.168.0.113"
            - "kafka1.mtct.blkchain:192.168.0.113"
            - "kafka2.mtct.blkchain:192.168.0.113"
            - "kafka3.mtct.blkchain:192.168.0.113"
        volumes:
            - ./crypto-config/ordererOrganizations/mtct.com/orderers/orderer2.mtct.com/msp:/var/hyperledger/orderer/msp
            - ./crypto-config/ordererOrganizations/mtct.com/orderers/orderer2.mtct.com/tls/:/var/hyperledger/orderer/tls
            - ./crypto-config/ordererOrganizations/mtct.com/orderers/orderer2.mtct.com/tls/:/etc/hyperledger/fabric/tls
            - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/genesis.block
            - ./chaindata/orderer2.mtct.com:/var/hyperledger/production/orderer
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          - mtct
        ports:
          - 9050:7050

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:1.4.0
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=DEBUG
      # - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli
      # ================================================
      - CORE_PEER_ADDRESS=peer0.invester.mtct.com:8051
      - CORE_PEER_LOCALMSPID=investerMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/invester.mtct.com/peers/peer0.invester.mtct.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/invester.mtct.com/peers/peer0.invester.mtct.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/invester.mtct.com/peers/peer0.invester.mtct.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/invester.mtct.com/users/Admin@invester.mtct.com/msp
      # ================================================
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    extra_hosts:
      - "orderer0.mtct.com:192.168.0.113"
      - "orderer1.mtct.com:192.168.0.113"
      - "orderer2.mtct.com:192.168.0.113"
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/chaincode
        - ./:/window
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./crypto-config:/etc/hyperledger/fabric/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    networks:
      - mtct